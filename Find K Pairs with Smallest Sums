class Solution {
public:
    struct comparator{
        bool operator() (pair<int, pair<int, int>> & x, pair<int, pair<int, int>> & y) {
            return x.second < y.second;
        }       
    };
    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {
        
        priority_queue<pair<int,pair<int,int>>> maxHeap;
        for(int i=0;i<nums1.size();i++)
        {
            for(int j=0;j<nums2.size();j++)
            {
                int sum=nums1[i]+nums2[j];
                if(maxHeap.size()<k)maxHeap.push({sum,{nums1[i],nums2[j]}});
                else if(sum<maxHeap.top().first)
                {
                    maxHeap.pop();
                    maxHeap.push({sum,{nums1[i],nums2[j]}});
                }
                else {
                    break; 
                }
            }
        }

        vector<vector<int>> ans;
        while(!maxHeap.empty())
        {
            ans.push_back({maxHeap.top().second.first,maxHeap.top().second.second});
            maxHeap.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
