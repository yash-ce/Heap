class Solution {
public:
    struct comparator{
    bool operator()(pair<int, int> &x , pair<int, int> &y){
        return x.second > y.second;
        }
    };
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> m;
        for(int i=0;i<nums.size();i++){
            m[nums[i]]++;
        }
        
        priority_queue<pair<int, int>, vector<pair<int, int>>, comparator> minHeap;
        for(auto pair: m){
            minHeap.push(pair);
            if(minHeap.size() > k){
                minHeap.pop();
            }
        }
        vector<int> v;
        int i=0;
        while(!minHeap.empty()){
            v.push_back(minHeap.top().first);
            minHeap.pop();
            // i++;
        }
        return v;
        
    }
};
