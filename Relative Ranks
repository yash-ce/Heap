class Solution {
public:
    struct comparator{
        bool operator() (pair<int, int> &x, pair<int, int> &y){
            return x.second < y.second;
        }
    };
    vector<string> findRelativeRanks(vector<int>& score) {
        map<int, int> m;
        for(int i=0;i<score.size();i++){
           m.insert({i, score[i]});
        }
        priority_queue<pair<int, int>, vector<pair<int, int>>, comparator> maxHeap;
        for(auto i: m){
            maxHeap.push(i);
        }
        vector<string> ans(score.size());
        int c = 0;
        while(!maxHeap.empty()){
            auto it = maxHeap.top();
            maxHeap.pop();
            if(c == 0){
                ans[it.first] = "Gold Medal";
            }
            else if(c == 1){
                ans[it.first] = "Silver Medal";
            }
            else if(c == 2){
                ans[it.first] = "Bronze Medal";
            }
            else{
                ans[it.first] = to_string(c+1);
            }
            c++;
        }
        return ans;
        
    }
};
