class Solution {
public:
    struct comparator {
        bool operator() (pair<char, int> &x, pair<char, int> &y){
            return x.second < y.second;
        }
    };
    string frequencySort(string s) {
        unordered_map<char, int> m;
        for(auto i: s){
            m[i]++;
        }
        priority_queue<pair<char, int>, vector<pair<char, int>>, comparator> maxHeap;
        for(auto pair : m){
            maxHeap.push(pair);
        }
        
        string ans = "";
        while(!maxHeap.empty()){
            pair<char, int> it = maxHeap.top();
            maxHeap.pop();
            for(int i=0;i<it.second;i++){
                ans += it.first;
            }
        }
        return ans;
    }
};
